export const BondingPoolFactoryABI = [
  // {
  //   type: "constructor",
  //   inputs: [
  //     { name: "saleToken_", type: "address", internalType: "address" },
  //     { name: "treasury_", type: "address", internalType: "address" },
  //   ],
  //   stateMutability: "nonpayable",
  // },
  // {
  //   type: "function",
  //   name: "SALE_TOKEN",
  //   inputs: [],
  //   outputs: [{ name: "", type: "address", internalType: "address" }],
  //   stateMutability: "view",
  // },
  // {
  //   type: "function",
  //   name: "TREASURY",
  //   inputs: [],
  //   outputs: [{ name: "", type: "address", internalType: "address" }],
  //   stateMutability: "view",
  // },
  // {
  //   type: "function",
  //   name: "allPools",
  //   inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
  //   outputs: [{ name: "", type: "address", internalType: "address" }],
  //   stateMutability: "view",
  // },
  {
    type: "function",
    name: "createPool",
    inputs: [
      { name: "name", type: "string", internalType: "string" },
      { name: "team", type: "bytes", internalType: "bytes" },
      { name: "apr", type: "uint256", internalType: "uint256" },
      { name: "lockDuration", type: "uint256", internalType: "uint256" },
      { name: "totalSaleCap", type: "uint256", internalType: "uint256" },
      { name: "saleDuration", type: "uint256", internalType: "uint256" },
      { name: "saleStartedAt", type: "uint256", internalType: "uint256" },
      {
        name: "rules",
        type: "tuple",
        internalType: "struct BondingPoolFactory.RuleSet",
        components: [
          {
            name: "paymentTokens",
            type: "address[]",
            internalType: "address[]",
          },
          { name: "prices", type: "uint256[]", internalType: "uint256[]" },
          { name: "mins", type: "uint256[]", internalType: "uint256[]" },
          { name: "maxs", type: "uint256[]", internalType: "uint256[]" },
        ],
      },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "nonpayable",
  },
  // {
  //   type: "function",
  //   name: "getPoolInfo",
  //   inputs: [{ name: "pool", type: "address", internalType: "address" }],
  //   outputs: [
  //     { name: "name_", type: "string", internalType: "string" },
  //     { name: "team_", type: "bytes", internalType: "bytes" },
  //     { name: "deployedAt_", type: "uint256", internalType: "uint256" },
  //     { name: "apr_", type: "uint256", internalType: "uint256" },
  //     { name: "lockDuration_", type: "uint256", internalType: "uint256" },
  //     { name: "totalSaleCap_", type: "uint256", internalType: "uint256" },
  //     { name: "totalSold_", type: "uint256", internalType: "uint256" },
  //     { name: "saleDuration_", type: "uint256", internalType: "uint256" },
  //     { name: "saleStartedAt_", type: "uint256", internalType: "uint256" },
  //     { name: "pausedDurationSum_", type: "uint256", internalType: "uint256" },
  //     {
  //       name: "status_",
  //       type: "uint8",
  //       internalType: "enum BondingPool.PoolStatus",
  //     },
  //   ],
  //   stateMutability: "view",
  // },
  // {
  //   type: "function",
  //   name: "getPools",
  //   inputs: [],
  //   outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
  //   stateMutability: "view",
  // },
  // {
  //   type: "function",
  //   name: "getPoolsCount",
  //   inputs: [],
  //   outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
  //   stateMutability: "view",
  // },
  {
    type: "function",
    name: "increasePoolCap",
    inputs: [
      { name: "poolAddr", type: "address", internalType: "address" },
      { name: "addAmount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  // {
  //   type: "event",
  //   name: "PoolCreated",
  //   inputs: [
  //     { name: "team", type: "bytes", indexed: true, internalType: "bytes" },
  //     { name: "pool", type: "address", indexed: true, internalType: "address" },
  //     {
  //       name: "creator",
  //       type: "address",
  //       indexed: true,
  //       internalType: "address",
  //     },
  //   ],
  //   anonymous: false,
  // },
  // { type: "error", name: "RulesLengthMismatch", inputs: [] },
  // { type: "error", name: "ZeroSaleToken", inputs: [] },
  // { type: "error", name: "ZeroTreasury", inputs: [] },
] as const;
